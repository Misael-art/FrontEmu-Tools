[project]
name = "sd-emulation-gui"
version = "0.1.0"
description = "SD Card Emulation Management GUI Application"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "PySide6>=6.9.2",
    "pydantic>=2.11.9",
    "python-dotenv>=1.1.1",
    "colorlog>=6.9.0",
    "requests>=2.32.5",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.2",
    "pytest-qt>=4.5.0",
    "pytest-cov>=7.0.0",
    "mypy>=1.18.2",
    "ruff>=0.13.2",
    "black>=25.9.0",
    "PyInstaller>=6.16.0",
]
test = [
    "pytest>=8.4.2",
    # "pytest-qt>=4.5.0",  # Comentado devido a problemas de importação em alguns ambientes
    "pytest-cov>=7.0.0",
]

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B018", "B017"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
 module = [
     "PySide6.*",
 ]
 ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=.",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html:reports/coverage",
    "--cov-report=xml",
    "--cov-fail-under=18",  # Updated to reflect current coverage
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gui: marks tests as GUI tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "*/__init__.py",
    "bootstrap.py",
    "demo_gui.py",
    "dependency_manager.py",
    "requirements_checker.py",
    "main.py",  # Legacy entry point
]

[tool.coverage.report]
fail_under = 18  # Updated to reflect current coverage level
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "def __repr__",
    "class .*\\(Protocol\\):",
]